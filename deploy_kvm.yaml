- name: Prepare KVM Virtual machines
  hosts: all
  pre_tasks:
    - name: check if sudo is passwordless
      debug:
        msg: "It is ok"
      become: true
    - name: set master_count
      set_fact:
        master_count: "{% if multi_master %} 3 {% else %} 1 {% endif %}"

  roles:
    - terraform-libvirt

  post_tasks:
    - block:
        - name: get virtual machines
          virt:
            command: list_vms
          register: machines
          become: true
        
        - name: Add bastion to play
          add_host:
            hostname: ocp-bastion.{{ network_name }}
            ansible_host: 10.10.10.10
            group: demo

        - name: Add masters to play
          add_host:
            hostname: "{{ item }}.{{ network_name }}"
            ansible_host: 10.10.10.2{{ ip_index+1 }}
            group: "demo"
          loop: "{{ machines['list_vms']|select('match','ocp-master.*')|list|sort }}"
          loop_control:
            index_var: ip_index

        - name: Add nodes to play
          add_host:
            hostname: "{{ item }}.{{ network_name }}"
            ansible_host: 10.10.10.4{{ ip_index+1 }}
            group: "demo"
          loop: "{{ machines['list_vms']|select('match','ocp-node.*')|list|sort }}"
          loop_control:
            index_var: ip_index

- name: Configure FQDN 
  hosts: demo 
  tasks:
    - name: install nmcli
      yum:
        name: NetworkManager
        state: latest
      when: ansible_distribution != "RedHat"

    - name: start and enable NM
      systemd:
        state: started
        enabled: true
        name: NetworkManager

    - name: disable hostname in NM
      shell: "/usr/bin/nmcli connection add con-name eth0 type ethernet ifname eth0"
      when: inventory_hostname in groups['demo']

    - name: disable hostname in NM
      shell: "/usr/bin/nmcli connection modify eth0 ipv4.dhcp-send-hostname false"
      when: inventory_hostname in groups['demo']

    - name: disable hostname in NM
      shell: "/usr/bin/nmcli connection up eth0"
      when: inventory_hostname in groups['demo']

    - name: set fqdn
      shell: "hostnamectl set-hostname {{ inventory_hostname }}"
      when: inventory_hostname in groups['demo']

    - name: set hostname
      copy:
        dest: /etc/hostname
        content: "{{ inventory_hostname }}"
      become: true
      when: inventory_hostname in groups['demo']
