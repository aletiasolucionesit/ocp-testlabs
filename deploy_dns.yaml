- name: Deploy DNS machine
  hosts: dns.essi.labs
  remote_user: root
  vars_files:
    - vars/default.yaml
  tasks:
    - name: Register and subscribe
      redhat_subscription:
        username: "{{ rh_user }}"
        auto_attach: yes
        password: "{{ rh_pass }}"
        state: present
      when:
        - ansible_distribution == "RedHat"
        - ( rh_user is defined and rh_pass is defined)

    - name: Install {{ item }}
      yum:
        name: "{{ item }}"
        state: latest
      loop:
        - dnsmasq
        - firewalld

    - name: Configure dnsmasq main file
      copy:
        dest: /etc/dnsmasq.conf
        content: |
          local=/essi.labs/
          address=/apps.essi.labs/192.168.131.10
          {% for master in range(1,master_count|int+1) %} 
          srv-host=_etcd-server-ssl._tcp.essi.labs,master-{{ master }}.essi.labs,2380,0,10

          {% endfor %}
          no-hosts
          addn-hosts=/etc/dnsmasq.openshift.addnhosts
          conf-dir=/etc/dnsmasq.d,.rpmnew,.rpmsave,.rpmorig
    - name: get_hosts
      xml: 
        path: /var/run/libvirt/network/openshift-cluster.xml
        xpath: /networkstatus/network/ip/dhcp/host
        content: attribute
      register: xml_net
      delegate_to: localhost
      become: yes

    - name: Configure dnsmasq OCP file
      copy:
        dest: /etc/dnsmasq.openshift.addnhosts
        content: |
          {% set count = namespace(a=0) %}
          {% for machine in xml_net['matches'] %}
          {{ machine['host']['ip'] }} {{ machine['host']['name'] }}.essi.labs {{ machine['host']['name'] }} {% if 'master' in machine['host']['name'] %} etcd-{{ count.a }}.essi.labs etcd-{{ count.a }} {% set count.a = count.a +1 %}{% elif 'dns' in machine['host']['name'] %} api.essi.labs api-int.essi.labs www.essi.labs loadbalancer.essi.labs {% endif %}

          {% endfor %}

    - name: Start and enable {{ item }}
      systemd:
        name: "{{ item }}"
        enabled: true 
        state: started
      loop:
        - dnsmasq
        - firewalld

    - name: Create dnsmasq firewall rule
      firewalld:
        state: enabled
        service: dns
        immediate: true
        permanent: true
