- name: Deploy WWW machine
  hosts: www.{{ clusterName }}.{{ baseDomain }}
  remote_user: root
  vars_files:
    - vars/default.yaml
  vars:
    ocp_release: "4.2"

  tasks:
    - name: Register and subscribe
      redhat_subscription:
        username: "{{ rh_user }}"
        auto_attach: yes
        password: "{{ rh_pass }}"
        state: present
      when:
        - ansible_distribution == "RedHat"
        - ( rh_user is defined and rh_pass is defined)

    - name: Install {{ item }} package
      yum:
        name: "{{ item }}"
        state: latest
      loop:
        - httpd
        - firewalld
        - tftp-server
        - syslinux
        - nfs-utils
        - bash-completion
        - vim

    - name: Create www directories
      file:
        path: /var/www/html/{{ item }} 
        group: apache
        state: directory
        mode: 0755
        owner: apache
      loop:
        - isos
        - ignition

    - name: Get rhcos iso files
      get_url:
        dest: /var/www/html/isos
        url: "{{ item }}"
        owner: apache
        group: apache
        mode: 0644
      loop:
        - https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_release }}/{{ ocp_release }}.0/rhcos-{{ ocp_release }}.0-x86_64-installer-initramfs.img
        - https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_release }}/{{ ocp_release }}.0/rhcos-{{ ocp_release }}.0-x86_64-installer-kernel
        - https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_release }}/{{ ocp_release }}.0/rhcos-{{ ocp_release }}.0-x86_64-installer.iso
        - https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_release }}/{{ ocp_release }}.0/rhcos-{{ ocp_release }}.0-x86_64-metal-bios.raw.gz

    - name: Create syslinux files
      copy:
        dest: /var/lib/tftpboot/{{ item }} 
        src: /usr/share/syslinux/{{ item }}
        remote_src: yes
      loop:
        - pxelinux.0
        - menu.c32
        - mboot.c32
        - chain.c32

    - name: Create pxelinux.cfg directory
      file:
        path: /var/lib/tftpboot/pxelinux.cfg
        state: directory

    - name: get hosts
      xml:
        path: /var/run/libvirt/network/openshift-cluster.xml
        xpath: /networkstatus/network/ip/dhcp/host
        content: attribute
      register: xml_net
      delegate_to: localhost
      become: true

    - name: set masters info
      set_fact:
        master_macs: "{{ master_macs|default([]) + [{'name': 'master', 'ip_hex': item.host.mac} ]}}"
      loop: "{{ xml_net.matches }}"
      when: "'master' in item['host']['name']"

    - name: set bootstrap info
      set_fact:
        bootstrap_macs: "{{ bootstrap_macs|default([]) +[{'name': 'bootstrap', 'ip_hex': item.host.mac}] }}"
      loop: "{{ xml_net.matches }}"
      when: "'bootstrap' in item['host']['name']"

    - name: set workers info
      set_fact:
        worker_macs: "{{ worker_macs|default([]) +[{'name': 'worker', 'ip_hex': item.host.mac}] }}"
      loop: "{{ xml_net.matches }}"
      when: "'worker' in item['host']['name']"

    - name: set macs
      set_fact:
        macs: "{{ macs|default([]) + [item] }}"
      loop:
        - "{{ bootstrap_macs }}"
        - "{{ master_macs }}"
        - "{{ worker_macs }}"


    - name: Create menu file
      copy:
        dest: /var/lib/tftpboot/pxelinux.cfg/01-{{ item.ip_hex|replace(':','-')|lower }}
        content: |
          default pxeboot
          prompt 0
          timeout 10
          LABEL pxeboot
              KERNEL http://www.{{ clusterName }}.{{ baseDomain }}/isos/rhcos-{{ ocp_release }}.0-x86_64-installer-kernel
              APPEND ip=dhcp rd.neednet=1 initrd=http://www.{{ clusterName }}.{{ baseDomain }}/isos/rhcos-{{ ocp_release }}.0-x86_64-installer-initramfs.img console=ttyS0 coreos.inst=yes coreos.inst.install_dev=vda coreos.inst.image_url=http://www.{{ clusterName }}.{{ baseDomain }}/isos/rhcos-{{ ocp_release }}.0-x86_64-metal-bios.raw.gz coreos.inst.ignition_url=http://www.{{ clusterName }}.{{ baseDomain }}/ignition/{{ item.name }}.ign
      loop: "{{ lookup('flattened', macs) }}"

    - name: Change Listen Port HTTPD
      lineinfile:
        path: /etc/httpd/conf/httpd.conf
        state: present
        regexp: "^Listen 80"
        line: "Listen 127.0.0.1:8080"

    - name: Start and enable {{ item }}
      systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop:
        - httpd
        - firewalld
        - tftp
        - nfs-server

    - name: Create firewall rules
      firewalld:
        state: enabled
        service: "{{ item }}"
        immediate: true
        permanent: true    
      loop:
        - jenkins
        - tftp
        - nfs
