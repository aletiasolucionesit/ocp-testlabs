- name: Deploy WWW machine
  hosts: www.{{ clusterName }}.{{ baseDomain }}
  remote_user: root
  vars_files:
    - vars/default.yaml
  vars:
    ocp_release: "4.2"

  tasks:
    - name: Register and subscribe
      redhat_subscription:
        username: "{{ rh_user }}"
        auto_attach: yes
        password: "{{ rh_pass }}"
        state: present
      when:
        - ansible_distribution == "RedHat"
        - ( rh_user is defined and rh_pass is defined)

    - name: Install packages
      yum:
        name: "{{ www_packages }}"
        state: latest

    - name: Create www directories
      file:
        path: /var/www/html/{{ item }} 
        group: apache
        state: directory
        mode: 0755
        owner: apache
      loop:
        - isos
        - ignition
    
    - name: Sets default ACL for joe on /etc/foo.d/
      acl:
        path: /var/www/html/{{ item }} 
        entity: apache
        etype: user
        permissions: rwx
        default: yes
        state: present
      loop:
        - isos
        - ignition

    - name: version 4.3-
      when: ocp_release |float <= 4.3
      block:
      - name: Get rhcos iso files
        get_url:
          dest: /var/www/html/isos
          url: "{{ item }}"
          owner: apache
          group: apache
          mode: 0644
        loop:
          - https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_release }}/{{ ocp_release }}.{{ ocp_minor }}/rhcos-{{ ocp_release }}.{{ ocp_minor }}-x86_64-installer-initramfs.x86_64.img
          - https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_release }}/{{ ocp_release }}.{{ ocp_minor }}/rhcos-{{ ocp_release }}.{{ ocp_minor }}-x86_64-installer-kernel-x86_64
          - https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_release }}/{{ ocp_release }}.{{ ocp_minor }}/rhcos-{{ ocp_release }}.{{ ocp_minor }}-x86_64-metal.x86_64.raw.gz

    - name: version 4.4+
      when: ocp_release |float >= 4.4
      block:
      - name: Get rhcos iso files
        get_url:
          dest: /var/www/html/isos
          url: "{{ item }}"
          owner: apache
          group: apache
          mode: 0644
        loop:
          - https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_release }}/{{ ocp_release }}.{{ ocp_minor }}/rhcos-{{ ocp_release }}.{{ ocp_minor }}-x86_64-live-initramfs.x86_64.img
          - https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_release }}/{{ ocp_release }}.{{ ocp_minor }}/rhcos-{{ ocp_release }}.{{ ocp_minor }}-x86_64-live-kernel-x86_64
          - https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_release }}/{{ ocp_release }}.{{ ocp_minor }}/rhcos-{{ ocp_release }}.{{ ocp_minor }}-x86_64-live-rootfs.x86_64.img

    - name: Create syslinux files
      copy:
        dest: /var/lib/tftpboot/
        src: /usr/share/syslinux/
        remote_src: yes

    - name: Create pxelinux.cfg directory
      file:
        path: /var/lib/tftpboot/pxelinux.cfg
        state: directory

    - name: get hosts
      xml:
        path: /var/run/libvirt/network/openshift-cluster.xml
        xpath: /networkstatus/network/ip/dhcp/host
        content: attribute
      register: xml_net
      delegate_to: localhost
      become: true

    - name: set masters info
      set_fact:
        master_macs: "{{ master_macs|default([]) + [{'name': 'master', 'ip_hex': item.host.mac} ]}}"
      loop: "{{ xml_net.matches }}"
      when: "'master' in item['host']['name']"

    - name: set bootstrap info
      set_fact:
        bootstrap_macs: "{{ bootstrap_macs|default([]) +[{'name': 'bootstrap', 'ip_hex': item.host.mac}] }}"
      loop: "{{ xml_net.matches }}"
      when: "'bootstrap' in item['host']['name']"

    - name: set workers info
      set_fact:
        worker_macs: "{{ worker_macs|default([]) +[{'name': 'worker', 'ip_hex': item.host.mac}] }}"
      loop: "{{ xml_net.matches }}"
      when: "'worker' in item['host']['name']"

    - name: set macs
      set_fact:
        macs: "{{ macs|default([]) + [item] }}"
      loop:
        - "{{ bootstrap_macs }}"
        - "{{ master_macs }}"
        - "{{ worker_macs | default([]) }}"

    - name: version 4.3-
      when: ocp_release |float <= 4.3
      block:
      - name: Create menu file
        copy:
          dest: /var/lib/tftpboot/pxelinux.cfg/01-{{ item.ip_hex|replace(':','-')|lower }}
          content: |
            default pxeboot
            prompt 0
            timeout 10
            LABEL pxeboot
                KERNEL http://www.{{ clusterName }}.{{ baseDomain }}/isos/rhcos-{{ ocp_release }}.{{ ocp_minor }}-x86_64-installer-kernel-x86_64
                APPEND ip=dhcp rd.neednet=1 initrd=http://www.{{ clusterName }}.{{ baseDomain }}/isos/rhcos-{{ ocp_release }}.{{ ocp_minor }}-x86_64-installer-initramfs.x86_64.img console=ttyS0 coreos.inst=yes coreos.inst.install_dev=vda coreos.inst.image_url=http://www.{{ clusterName }}.{{ baseDomain }}/isos/rhcos-{{ ocp_release }}.{{ ocp_minor }}-x86_64-metal.x86_64.raw.gz coreos.inst.ignition_url=http://www.{{ clusterName }}.{{ baseDomain }}/ignition/{{ item.name }}.ign
        loop: "{{ lookup('flattened', macs) }}"

    - name: version 4.4+
      when: ocp_release |float >= 4.4
      block:
      - name: Create menu file
        copy:
          dest: /var/lib/tftpboot/pxelinux.cfg/01-{{ item.ip_hex|replace(':','-')|lower }}
          content: |
            default pxeboot
            prompt 0
            timeout 10
            LABEL pxeboot
                KERNEL http://www.{{ clusterName }}.{{ baseDomain }}/isos/rhcos-{{ ocp_release }}.{{ ocp_minor }}-x86_64-live-kernel-x86_64
                APPEND ip=dhcp rd.neednet=1 initrd=http://www.{{ clusterName }}.{{ baseDomain }}/isos/rhcos-{{ ocp_release }}.{{ ocp_minor }}-x86_64-live-initramfs.x86_64.img console=ttyS0 coreos.inst.install_dev=vda coreos.live.rootfs_url=http://www.{{ clusterName }}.{{ baseDomain }}/isos/rhcos-{{ ocp_release }}.{{ ocp_minor }}-x86_64-live-rootfs.x86_64.img coreos.inst.ignition_url=http://www.{{ clusterName }}.{{ baseDomain }}/ignition/{{ item.name }}.ign
        loop: "{{ lookup('flattened', macs) }}"

    - name: Change Listen Port HTTPD
      lineinfile:
        path: /etc/httpd/conf/httpd.conf
        state: present
        regexp: "^Listen 80"
        line: "Listen 127.0.0.1:8080"

    - name: Start and enable {{ item }}
      systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop:
        - httpd
        - firewalld
        - tftp
        - nfs-server

    - name: Create firewall rules
      firewalld:
        state: enabled
        service: "{{ item }}"
        immediate: true
        permanent: true    
      loop:
        - jenkins
        - tftp
        - nfs

    - name: copy supplemantal directories
      copy:
        src: "{{ item }}"
        dest: /root/
      loop:
        - LDAP
        - REGISTRY

    - name: disable SELINUX
      selinux:
        state: permissive
        policy: targeted

    - name: disable SELINUX II
      shell: setenforce permissive

